diff --git content/renderer/loader/web_url_loader_impl.h content/renderer/loader/web_url_loader_impl.h
index c5b971593d0d..760d5841434e 100644
--- content/renderer/loader/web_url_loader_impl.h
+++ content/renderer/loader/web_url_loader_impl.h
@@ -83,6 +83,7 @@ class CONTENT_EXPORT WebURLLoaderImpl : public blink::WebURLLoader {
                          blink::WebBlobInfo& downloaded_blob) override;
   void LoadAsynchronously(const blink::WebURLRequest& request,
                           blink::WebURLLoaderClient* client) override;
+  void Cancel() override;
   void SetDefersLoading(bool value) override;
   void DidChangePriority(blink::WebURLRequest::Priority new_priority,
                          int intra_priority_value) override;
@@ -93,8 +94,6 @@ class CONTENT_EXPORT WebURLLoaderImpl : public blink::WebURLLoader {
   class RequestPeerImpl;
   class SinkPeer;
 
-  void Cancel();
-
   scoped_refptr<Context> context_;
 
   DISALLOW_COPY_AND_ASSIGN(WebURLLoaderImpl);
diff --git third_party/blink/public/platform/web_url_loader.h third_party/blink/public/platform/web_url_loader.h
index 7bb0b6bf25dc..d0b6bf5a887b 100644
--- third_party/blink/public/platform/web_url_loader.h
+++ third_party/blink/public/platform/web_url_loader.h
@@ -71,6 +71,10 @@ class WebURLLoader {
   virtual void LoadAsynchronously(const WebURLRequest&,
                                   WebURLLoaderClient*) = 0;
 
+  // Cancels an asynchronous load.  This will appear as a load error to
+  // the client.
+  virtual void Cancel() {}
+
   // Suspends/resumes an asynchronous load.
   virtual void SetDefersLoading(bool) = 0;
 

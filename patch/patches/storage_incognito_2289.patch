diff --git content/browser/blob_storage/chrome_blob_storage_context.cc content/browser/blob_storage/chrome_blob_storage_context.cc
index f90e9fce0675..33551a2874bc 100644
--- content/browser/blob_storage/chrome_blob_storage_context.cc
+++ content/browser/blob_storage/chrome_blob_storage_context.cc
@@ -117,7 +117,8 @@ ChromeBlobStorageContext* ChromeBlobStorageContext::GetFor(
 
     // If we're not incognito mode, schedule all of our file tasks to enable
     // disk on the storage context.
-    if (!context->IsOffTheRecord() && io_thread_valid) {
+    if (!context->GetPath().empty() && !context->IsOffTheRecord() &&
+        io_thread_valid) {
       file_task_runner = base::ThreadPool::CreateTaskRunner(
           {base::MayBlock(), base::TaskPriority::USER_VISIBLE,
            base::TaskShutdownBehavior::SKIP_ON_SHUTDOWN});
diff --git content/browser/browser_context.cc content/browser/browser_context.cc
index 05473c622dbd..9cd0e465fd2d 100644
--- content/browser/browser_context.cc
+++ content/browser/browser_context.cc
@@ -129,7 +129,7 @@ StoragePartition* GetStoragePartitionFromConfig(
   StoragePartitionImplMap* partition_map =
       GetStoragePartitionMap(browser_context);
 
-  if (browser_context->IsOffTheRecord())
+  if (browser_context->IsOffTheRecord() || browser_context->GetPath().empty())
     in_memory = true;
 
   return partition_map->Get(partition_domain, partition_name, in_memory,
@@ -543,7 +543,7 @@ media::VideoDecodePerfHistory* BrowserContext::GetVideoDecodePerfHistory() {
         kUseInMemoryDBDefault);
 
     std::unique_ptr<media::VideoDecodeStatsDB> stats_db;
-    if (use_in_memory_db) {
+    if (use_in_memory_db || GetPath().empty()) {
       stats_db =
           std::make_unique<media::InMemoryVideoDecodeStatsDBImpl>(nullptr);
     } else {
diff --git storage/browser/database/database_tracker.cc storage/browser/database/database_tracker.cc
index ecc6a0d2b8e5..b120add8abab 100644
--- storage/browser/database/database_tracker.cc
+++ storage/browser/database/database_tracker.cc
@@ -506,7 +506,7 @@ bool DatabaseTracker::LazyInit() {
     meta_table_.reset(new sql::MetaTable());
 
     is_initialized_ =
-        base::CreateDirectory(db_dir_) &&
+        (is_off_the_record_ ? true : base::CreateDirectory(db_dir_)) &&
         (db_->is_open() ||
          (is_off_the_record_ ? db_->OpenInMemory()
                              : db_->Open(kTrackerDatabaseFullPath))) &&
